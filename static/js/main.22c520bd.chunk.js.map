{"version":3,"sources":["components/ContactList/ContactList.module.css","components/InputBox/InputBox.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","redux/slice.js","redux/store-toolkit.js","components/PageTitle/PageTitle.jsx","components/InputBox/InputBox.jsx","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","storedData","localStorage","getItem","parsedData","JSON","parse","initialContacts","length","contactsSlice","createSlice","name","initialState","items","filter","reducers","addContact","state","action","payload","deleteContact","contact","id","setFilter","actions","configureStore","reducer","contacts","contactsReducer","useStyles","createUseStyles","PageTitle","marginBottom","padding","textAlign","color","title","classes","className","InputBox","htmlFor","type","pattern","placeholder","required","value","labelText","onChange","styles","Form__wrap","Form__label","Form__input","defaultProps","Form","useState","number","localState","setLocalState","useSelector","dispatch","useDispatch","onInputChange","target","prevState","onSubmit","event","preventDefault","newContact","Math","ceil","random","find","toLowerCase","includes","contactsChecker","alert","Form__btn","ContactList","filteredContacts","normalizedText","filterContacts","ContactList__title","map","ContactList__item","ContactList__name","ContactList__phone","Provider","size","onClick","ContactList__icon","Filter","Filter__wrap","Filter__title","currentTarget","App","useEffect","setItem","stringify","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,OAAS,qBAAqB,WAAa,UAAU,KAAO,UAAU,UAAY,UAAU,IAAM,UAAU,YAAc,iCAAiC,mBAAqB,wCAAwC,kBAAoB,uCAAuC,kBAAoB,uCAAuC,mBAAqB,wCAAwC,kBAAoB,yC,mBCAjbD,EAAOC,QAAU,CAAC,OAAS,qBAAqB,WAAa,UAAU,SAAW,UAAU,KAAO,UAAU,WAAa,6BAA6B,YAAc,8BAA8B,YAAc,gC,mBCAjND,EAAOC,QAAU,CAAC,OAAS,qBAAqB,WAAa,UAAU,SAAW,UAAU,KAAO,UAAU,MAAQ,UAAU,KAAO,mBAAmB,UAAY,0B,mBCArKD,EAAOC,QAAU,CAAC,aAAe,6BAA6B,cAAgB,gC,+HCCxEC,EAAaC,aAAaC,QAAQ,gBAClCC,EAAaC,KAAKC,MAAML,GAExBM,GAA4B,OAAVH,QAAU,IAAVA,OAAA,EAAAA,EAAYI,SAAU,EAAIJ,EAAa,GASzDK,EAAgBC,YAAY,CAChCC,KAAM,WACNC,aAAc,CACZC,MAAON,EACPO,OAAQ,IAGVC,SAAU,CACRC,WAAY,SAACC,EAAOC,GAAR,mBAAC,eACRD,GADO,IAEVJ,MAAM,GAAD,mBAAMI,EAAMJ,OAAZ,CAAmBK,EAAOC,aAGjCC,cAAe,SAACH,EAAOC,GAAR,mBAAC,eACXD,GADU,IAEbJ,MAAOI,EAAMJ,MAAMC,QAAO,SAAAO,GAAO,OAAIA,EAAQC,KAAOJ,EAAOC,cAG7DI,UAAW,SAACN,EAAOC,GACjB,OAAO,2BACFD,GADL,IAEEH,OAAQI,EAAOC,cAMhB,EAAiDV,EAAce,QAAvDR,EAAR,EAAQA,WAAYI,EAApB,EAAoBA,cAAeG,EAAnC,EAAmCA,UAE3Bd,IAAf,QCxCegB,cAAe,CAC5BC,QAAS,CACPC,SAAUC,K,eCFRC,EAAYC,YAAgB,CAChCC,UAAW,CACTC,aAAc,GACdC,QAAS,GACTC,UAAW,SACXC,MAAO,aAcIJ,EAVG,SAAC,GAAe,IAAbK,EAAY,EAAZA,MACbC,EAAUR,IAEhB,OAAO,oBAAIS,UAAWD,EAAQN,UAAvB,SAAmCK,K,iCCZtCG,EAAW,SAAC,GAYX,IAXLC,EAWI,EAXJA,QACAC,EAUI,EAVJA,KACAnB,EASI,EATJA,GACAX,EAQI,EARJA,KACAyB,EAOI,EAPJA,MACAM,EAMI,EANJA,QACAC,EAKI,EALJA,YACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAOA,OACE,sBAAKT,UAAWU,IAAOC,WAAvB,UACE,uBAAOT,QAASA,EAASF,UAAWU,IAAOE,YAA3C,SACE,+BAAOJ,MAGT,uBACER,UAAWU,IAAOG,YAClBV,KAAMA,EACNnB,GAAIA,EACJX,KAAMA,EACNyB,MAAOA,EACPM,QAAS,UAAY,SAAZA,EAhBb,yHACmB,2CAgBfC,YAAaA,EACbC,SAAUA,EACVG,SAAUA,EACVF,MAAOA,QAMfN,EAASa,aAAe,CACtBhB,MAAO,yBACPQ,UAAU,EACVE,UAAW,oBAiBEP,Q,iBCyBAc,EAjFF,WACX,MAAoCC,mBAAS,CAAE3C,KAAM,GAAI4C,OAAQ,KAAjE,mBAAOC,EAAP,KAAmBC,EAAnB,KACQ5C,EAAU6C,aAAY,SAAAzC,GAAK,OAAIA,EAAMU,YAArCd,MAEF8C,EAAWC,cAQXC,EAAgB,SAAC,GAAiC,IAAD,IAA9BC,OAAUnD,EAAoB,EAApBA,KAAMkC,EAAc,EAAdA,MACvC,OAAOY,GAAc,SAAAM,GAAS,kCACzBA,GADyB,kBAE3BpD,EAAOkC,QA0BZ,OACE,uBAAMP,UAAWU,IAAOK,KAAMW,SAjBX,SAAAC,GACnBA,EAAMC,iBAEN,IAAQvD,EAAiB6C,EAAjB7C,KAAM4C,EAAWC,EAAXD,OAIRY,EAAa,CAAE7C,GAFP,aAAS8C,KAAKC,KAAqB,IAAhBD,KAAKE,WAEH3D,OAAM4C,WAbnB,SAAA5C,GACtB,cAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAO0D,MAAK,SAAAlD,GAAO,OACxBA,EAAQV,KAAK6D,cAAcC,SAAS9D,EAAK6D,kBAa3CE,CAAgB/D,GAEZgD,EAAS3C,EAAWmD,IADpBQ,MAAM,GAAD,OAAIhE,EAAJ,4BA5BT8C,EAAc,CACZ9C,KAAM,GACN4C,OAAQ,MAiCV,UACE,cAAC,EAAD,CACET,UAAW,OACXN,QAAS,OACTC,KAAM,OACNnB,GAAI,OACJX,KAAM,OACNyB,MACE,kcAEFM,QAAS,OACTC,YAAa,OACbC,UAAU,EACVC,MAAOW,EAAW7C,KAClBoC,SAAUc,IAGZ,cAAC,EAAD,CACEf,UAAW,eACXN,QAAS,MACTC,KAAM,MACNnB,GAAI,MACJX,KAAM,SACNyB,MACE,6iBAEFM,QAAS,QACTC,YAAa,eACbC,UAAU,EACVC,MAAOW,EAAWD,OAClBR,SAAUc,IAEZ,wBAAQvB,UAAWU,IAAO4B,UAAWnC,KAAK,SAA1C,wB,gCCzBSoC,EAjDK,WAClB,IAAMlD,EAAW+B,aAAY,SAAAzC,GAAK,OAAIA,EAAMU,YACpCd,EAAkBc,EAAlBd,MAAOC,EAAWa,EAAXb,OAKT6C,EAAWC,cAUXkB,EARiB,SAACjE,EAAOC,GAC7B,IAAMiE,EAAiBjE,EAAO0D,cAE9B,OAAO3D,EAAMC,QAAO,SAAAO,GAAO,OACzBA,EAAQV,KAAK6D,cAAcC,SAASM,MAIfC,CAAenE,EAAOC,GAE/C,OACE,sBAAKwB,UAAWU,IAAO6B,YAAvB,UACE,oBAAIvC,UAAWU,IAAOiC,mBAAtB,0BACA,6BACGH,EAAiBI,KAAI,SAAA7D,GACpB,OACE,qBAAqBiB,UAAWU,IAAOmC,kBAAvC,UACE,mBAAG7C,UAAWU,IAAOoC,kBAArB,SAAyC/D,EAAQV,OACjD,mBAAG2B,UAAWU,IAAOqC,mBAArB,SAA0ChE,EAAQkC,SAElD,cAAC,IAAY+B,SAAb,CACEzC,MAAO,CACLV,MAAO,UACPoD,KAAM,SACNjD,UAAW,oBACXF,MAAO,UALX,SAQE,qBAAKoD,QAAS,kBAAM7B,EAASvC,EAAcC,EAAQC,MAAnD,SACE,cAAC,IAAD,CAAUgB,UAAWU,IAAOyC,0BAbzBpE,EAAQC,a,iBCCdoE,EA3BA,WACb,IAAQ5E,EAAW4C,aAAY,SAAAzC,GAAK,OAAIA,EAAMU,YAAtCb,OAEF6C,EAAWC,cAIjB,OACE,sBAAKtB,UAAWU,IAAO2C,aAAvB,UACE,oBAAIrD,UAAWU,IAAO4C,cAAtB,oBAEA,cAAC,EAAD,CACE9C,UAAW,YACXN,QAAS,SACTC,KAAM,OACNnB,GAAI,SACJX,KAAM,SACN+B,QAAS,OACTC,YAAa,OACbC,UAAU,EACVC,MAAO/B,EACPiC,SAhBgB,SAAAkB,GAAK,OAAIN,EAASpC,EAAU0C,EAAM4B,cAAchD,eCazDiD,EAjBH,WACV,IAAQjF,EAAU6C,aAAY,SAAAzC,GAAK,OAAIA,EAAMU,YAArCd,MAMR,OAJAkF,qBAAU,WACR,OAAO7F,aAAa8F,QAAQ,eAAgB3F,KAAK4F,UAAUpF,MAC1D,CAACA,IAGF,qCACE,cAAC,EAAD,CAAWuB,MAAO,qCAClB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,YCVN8D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.22c520bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"text\":\"#252b31\",\"lightened\":\"#f6fafb\",\"red\":\"#ff0000\",\"ContactList\":\"ContactList_ContactList__2Tdav\",\"ContactList__title\":\"ContactList_ContactList__title__3Jzd8\",\"ContactList__item\":\"ContactList_ContactList__item__9s3gc\",\"ContactList__name\":\"ContactList_ContactList__name__1bCdY\",\"ContactList__phone\":\"ContactList_ContactList__phone__3P_zF\",\"ContactList__icon\":\"ContactList_ContactList__icon__3Szeo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"darkened\":\"#597387\",\"text\":\"#252b31\",\"Form__wrap\":\"InputBox_Form__wrap__275N5\",\"Form__label\":\"InputBox_Form__label__2ZQOE\",\"Form__input\":\"InputBox_Form__input__1bAbu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"darkened\":\"#597387\",\"text\":\"#252b31\",\"white\":\"#ffffff\",\"Form\":\"Form_Form__1PpjY\",\"Form__btn\":\"Form_Form__btn__1JVAC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__wrap\":\"Filter_Filter__wrap__2YlAB\",\"Filter__title\":\"Filter_Filter__title__3J8AP\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst storedData = localStorage.getItem('al-phonebook');\r\nconst parsedData = JSON.parse(storedData);\r\n\r\nconst initialContacts = parsedData?.length >= 1 ? parsedData : [];\r\n\r\n/*\r\n{ id: 'id-12345', name: 'Daniel Defoe', number: '987-6541210' },\r\n{ id: 'id-54321', name: 'Jonathan Swift', number: '987-6542210' },\r\n{ id: 'id-98765', name: 'Robert Stevenson', number: '987-6543210' },\r\n{ id: 'id-56789', name: 'Lewis Carroll', number: '987-6544210' },\r\n*/\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: initialContacts,\r\n    filter: '',\r\n  },\r\n\r\n  reducers: {\r\n    addContact: (state, action) => ({\r\n      ...state,\r\n      items: [...state.items, action.payload],\r\n    }),\r\n\r\n    deleteContact: (state, action) => ({\r\n      ...state,\r\n      items: state.items.filter(contact => contact.id !== action.payload),\r\n    }),\r\n\r\n    setFilter: (state, action) => {\r\n      return {\r\n        ...state,\r\n        filter: action.payload,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addContact, deleteContact, setFilter } = contactsSlice.actions;\r\n\r\nexport default contactsSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './slice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  PageTitle: {\n    marginBottom: 20,\n    padding: 10,\n    textAlign: 'center',\n    color: '#252b31',\n  },\n});\n\nconst PageTitle = ({ title }) => {\n  const classes = useStyles();\n\n  return <h1 className={classes.PageTitle}>{title}</h1>;\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PageTitle;\n","import PropTypes from 'prop-types';\nimport styles from './InputBox.module.css';\n\nconst InputBox = ({\n  htmlFor,\n  type,\n  id,\n  name,\n  title,\n  pattern,\n  placeholder,\n  required,\n  value,\n  labelText,\n  onChange,\n}) => {\n  const patternText =\n    \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n  const patternPhone = '^[+]{0,1}[ .()0-9-]{3,8}[0-9. -]{3,11}$';\n  // '/(+?( |-|.)?d{1,2}( |-|.)?)?((?d{3})?|d{3})( |-|.)?(d{3}( |-|.)?d{4})/';\n\n  return (\n    <div className={styles.Form__wrap}>\n      <label htmlFor={htmlFor} className={styles.Form__label}>\n        <span>{labelText}</span>\n      </label>\n\n      <input\n        className={styles.Form__input}\n        type={type}\n        id={id}\n        name={name}\n        title={title}\n        pattern={pattern === 'text' ? `${patternText}` : `${patternPhone}`}\n        placeholder={placeholder}\n        required={required}\n        onChange={onChange}\n        value={value}\n      />\n    </div>\n  );\n};\n\nInputBox.defaultProps = {\n  title: 'Please enter some text',\n  required: true,\n  labelText: 'Label for -->',\n};\n\nInputBox.propTypes = {\n  htmlFor: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  pattern: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  labelText: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n}.isRequired;\n\nexport default InputBox;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { addContact } from '../../redux/creators';\nimport { addContact } from '../../redux/slice';\nimport InputBox from '../InputBox/InputBox';\nimport styles from './Form.module.css';\n\nconst Form = () => {\n  const [localState, setLocalState] = useState({ name: '', number: '' });\n  const { items } = useSelector(state => state.contacts);\n  // const items = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  const setDefault = () =>\n    setLocalState({\n      name: '',\n      number: '',\n    });\n\n  const onInputChange = ({ target: { name, value } }) => {\n    return setLocalState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const contactsChecker = name => {\n    return items?.find(contact =>\n      contact.name.toLowerCase().includes(name.toLowerCase()),\n    );\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = localState;\n\n    const idSetter = `id-${Math.ceil(Math.random() * 100000)}`;\n\n    const newContact = { id: idSetter, name, number };\n\n    contactsChecker(name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact(newContact));\n\n    setDefault();\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <InputBox\n        labelText={'Name'}\n        htmlFor={'name'}\n        type={'text'}\n        id={'name'}\n        name={'name'}\n        title={\n          \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        }\n        pattern={'text'}\n        placeholder={'Name'}\n        required={true}\n        value={localState.name}\n        onChange={onInputChange}\n      />\n\n      <InputBox\n        labelText={'Phone number'}\n        htmlFor={'tel'}\n        type={'tel'}\n        id={'tel'}\n        name={'number'}\n        title={\n          'Номер телефона должен состоять из 11-12 цифр и может содержать цифры, точки, пузатые скобки и может начинаться с +'\n        }\n        pattern={'phone'}\n        placeholder={'Phone Number'}\n        required={true}\n        value={localState.number}\n        onChange={onInputChange}\n      />\n      <button className={styles.Form__btn} type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n\n/*\nconst mapStateToProps = state => ({\n  contacts: state.contactReducer,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: newContact => dispatch(addContact(newContact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n*/\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/slice';\n// import { deleteContact } from '../../redux/creators';\nimport { IconContext } from 'react-icons';\nimport { MdDelete } from 'react-icons/md';\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contacts);\n  const { items, filter } = contacts;\n\n  // const items = useSelector(state => state.contacts);\n  // const filter = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n\n  const filterContacts = (items, filter) => {\n    const normalizedText = filter.toLowerCase();\n\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedText),\n    );\n  };\n\n  const filteredContacts = filterContacts(items, filter);\n\n  return (\n    <div className={styles.ContactList}>\n      <h3 className={styles.ContactList__title}>Contact List</h3>\n      <ul>\n        {filteredContacts.map(contact => {\n          return (\n            <li key={contact.id} className={styles.ContactList__item}>\n              <p className={styles.ContactList__name}>{contact.name}</p>\n              <p className={styles.ContactList__phone}>{contact.number}</p>\n\n              <IconContext.Provider\n                value={{\n                  color: 'inherit',\n                  size: '1.2rem',\n                  className: 'global-class-name',\n                  title: 'delete',\n                }}\n              >\n                <div onClick={() => dispatch(deleteContact(contact.id))}>\n                  <MdDelete className={styles.ContactList__icon} />\n                </div>\n              </IconContext.Provider>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n\n/*\nconst mapStateToProps = state => ({\n  contacts: filteredContacts(state.contactReducer, state.filterContactsReducer),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(deleteContact(id)),\n});\n\n*/\n","import InputBox from '../InputBox/InputBox';\nimport styles from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/slice';\n// import { setFilter } from '../../redux/creators';\n\nconst Filter = () => {\n  const { filter } = useSelector(state => state.contacts);\n  // const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const filterHandler = event => dispatch(setFilter(event.currentTarget.value));\n\n  return (\n    <div className={styles.Filter__wrap}>\n      <h3 className={styles.Filter__title}>Search</h3>\n\n      <InputBox\n        labelText={'Find Name'}\n        htmlFor={'filter'}\n        type={'text'}\n        id={'filter'}\n        name={'filter'}\n        pattern={'text'}\n        placeholder={'Name'}\n        required={false}\n        value={filter}\n        onChange={filterHandler}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n\n// const mapStateToProps = state => ({\n//   contacts: state.contactReducer,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: event => dispatch(filterContacts(event.currentTarget.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PageTitle from './components/PageTitle/PageTitle';\nimport Form from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nconst App = () => {\n  const { items } = useSelector(state => state.contacts);\n\n  useEffect(() => {\n    return localStorage.setItem('al-phonebook', JSON.stringify(items));\n  }, [items]);\n\n  return (\n    <>\n      <PageTitle title={'HomeWork #6 (Phonebook) of React'} />\n      <Form />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import store from './redux/creators';\nimport store from './redux/store-toolkit';\nimport App from './App.js';\nimport './index.css';\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}